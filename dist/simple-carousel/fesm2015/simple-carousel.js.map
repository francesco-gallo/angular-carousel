{"version":3,"file":"simple-carousel.js","sources":["../../../projects/simple-carousel/src/lib/components/cards/generic-card/generic-card.component.ts","../../../projects/simple-carousel/src/lib/components/cards/placeholder-card/placeholder-card.component.ts","../../../projects/simple-carousel/src/lib/components/cards/single-card/single-card.component.ts","../../../projects/simple-carousel/src/lib/components/carousel/carousel.component.ts","../../../projects/simple-carousel/src/lib/utils/duration.pipe.ts","../../../projects/simple-carousel/src/lib/components/cards/multiple-card/multiple-card.component.ts","../../../projects/simple-carousel/src/lib/simple-carousel.module.ts","../../../projects/simple-carousel/src/lib/models/card-cardinality.ts","../../../projects/simple-carousel/src/lib/models/card-type.ts","../../../projects/simple-carousel/src/lib/models/card-model.ts","../../../projects/simple-carousel/src/public-api.ts","../../../projects/simple-carousel/src/simple-carousel.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CardModel } from '../../../models/card-model';\n\n@Component({\n  selector: 'lib-generic-card',\n  templateUrl: './generic-card.component.html',\n  styleUrls: ['./generic-card.component.scss']\n})\nexport class GenericCardComponent {\n  static width = 220;\n  \n  public model$: Observable<CardModel>\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-placeholder-card',\n  templateUrl: './placeholder-card.component.html',\n  styleUrls: ['./placeholder-card.component.scss']\n})\nexport class PlaceholderCardComponent {\n\n}\n","import { Component, Input } from '@angular/core';\nimport { CardModel } from '../../../models/card-model';\nimport { BaseCard } from '../base-card';\n\n@Component({\n  selector: 'lib-single-card',\n  templateUrl: './single-card.component.html',\n  styleUrls: ['./single-card.component.scss']\n})\nexport class SingleCardComponent implements BaseCard {\n\n  @Input()\n  public model: CardModel;\n\n}\n","import {\n  Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Input, OnInit,\n  ViewChild, ViewContainerRef\n} from '@angular/core';\nimport { of } from 'rxjs';\nimport { CardModel } from '../../models/card-model';\nimport { GenericCardComponent } from '../cards/generic-card/generic-card.component';\n\n@Component({\n  selector: 'lib-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent implements OnInit {\n\n  @Input()\n  public title: string;\n\n  @Input()\n  public subtitle: string;\n\n  @Input()\n  public icon: string;\n\n  @Input()\n  public fetchCards: (chunkSize: number) => Promise<CardModel[]>;\n\n  public currentIndex = 0;\n\n  public mouseInside = false;\n\n  public cardModels: CardModel[] = [];\n\n  @ViewChild('container', {read: ViewContainerRef, static: true}) // container for the cards\n  private container: ViewContainerRef;\n\n  @ViewChild('scrollable', {read: ElementRef, static: true}) // scrollable wrapper\n  private scrollable: ElementRef<HTMLDivElement>;\n\n  private windowSize = 0;  // how many cards can be concurrently viewed\n\n  private chunkSize = 6\n\n  private cardRefs: ComponentRef<GenericCardComponent>[] = [];\n\n  private cardWidth = GenericCardComponent.width;\n\n  // Don't fetch new data if we are already waiting for some\n  private pendingLoadings = false;\n\n  private init = false;\n\n  constructor(private resolver: ComponentFactoryResolver) { }\n\n  ngOnInit(): void {\n    this.refreshWindowSize();\n    this.fetchData(this.windowSize);\n    this.init = true;\n  }\n\n  public scrollCarousel(count: number): void {\n    this.refreshWindowSize();\n    if (count < 0) { // We are backtracking, all the cards data have already been requested\n      this.currentIndex = Math.max(0, this.currentIndex + count); // Index can't be negative\n    } else if (count > 0) {\n      this.currentIndex += count;\n      this.conditionalFetchData();\n    }\n\n    const isNext = (count>0);\n    this.refreshCardModels(isNext);\n    this.scrollable.nativeElement.scrollTo({left: isNext ? 0 : this.cardWidth, behavior: 'auto'})\n    this.scrollable.nativeElement.scrollTo({left: isNext ? this.cardWidth : 0, behavior: 'smooth'})\n  }\n\n  public conditionalFetchData(): void {\n    if (!this.pendingLoadings) {\n      // Check whether we are going outside the already fetched data and we need to load a new set of data\n      if (this.currentIndex + this.windowSize > this.cardModels.length) {\n        this.fetchData(this.chunkSize);\n      }\n    }\n  }\n\n  public onMouseInside(inside: boolean): void {\n    this.mouseInside = inside;\n  }\n\n  private fetchData(count: number): void {\n    if (this.fetchCards) {\n      const isInit = this.init; // The first time the refresh model method needs to start from 0\n      this.pendingLoadings = true;\n      this.fetchCards(count).then(data => {\n        this.pendingLoadings = false;\n        this.cardModels.push(...data);\n        this.refreshCardModels(isInit);\n        this.conditionalFetchData();\n      });\n    }\n  }\n\n  // Create or destroy the references to keep the memory clean\n  private refreshCardInstances(delta: number) {\n    if (this.container) {\n      if (delta > 0) {\n        const factory: ComponentFactory<GenericCardComponent> = this.resolver.resolveComponentFactory(GenericCardComponent);\n        for (let i = 0; i<delta; ++i) {\n          const newCard: ComponentRef<GenericCardComponent> = this.container.createComponent(factory);\n          this.cardRefs.push(newCard);\n        }\n      } else {\n        for (let i = 0; i < -delta; ++i) {\n          const ref = this.cardRefs.pop();\n          ref.destroy();\n        }\n      }\n    }\n  }\n\n  // In case the carousel got resized, check if new widgets are needed\n  private refreshWindowSize(): void {\n    if (this.scrollable) {\n      const newWindowSize = Math.ceil(this.scrollable.nativeElement.getBoundingClientRect().width / this.cardWidth) + 1\n      if (this.windowSize !== newWindowSize) {\n        this.refreshCardInstances(newWindowSize - this.windowSize);\n      }\n      this.windowSize = newWindowSize;\n    }\n  }\n\n  // switches the model to fake the widgets' rotation\n  private refreshCardModels(isNext = false): void {\n    for (let i = 0; i < this.cardRefs.length; ++i) {\n      const candidateIndex = i + this.currentIndex + (isNext ? -1 : 0);\n      this.cardRefs[i].instance.model$ = of(this.cardModels[candidateIndex]);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duration'\n})\nexport class DurationPipe implements PipeTransform {\n\n  // transform ms into duration\n  transform(value: number): string {\n    let string = \"\";\n    value /= 1000 //ms to seconds\n    value = Math.floor(value);\n\n    let minutes = Math.floor(value / 60);\n\n    if (value < 3600) {  // less than 1h\n      const seconds = value - (minutes * 60);\n      if (seconds < 10) {\n        string = `${minutes}:0${seconds}`;\n      } else {\n        string = `${minutes}:${seconds}`;\n      }\n    } else {\n      const hours = Math.floor(minutes / 60);\n      minutes = minutes - (hours * 60);\n      string = `${hours}h ${minutes}m`;\n    }\n    return string;\n  }\n\n}\n","import { Input } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { CardModel } from '../../../models/card-model';\nimport { BaseCard } from '../base-card';\n\n@Component({\n  selector: 'lib-multiple-card',\n  templateUrl: './multiple-card.component.html',\n  styleUrls: ['./multiple-card.component.scss']\n})\nexport class MultipleCardComponent implements BaseCard {\n\n  @Input()\n  public model: CardModel;\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { GenericCardComponent } from './components/cards/generic-card/generic-card.component';\nimport { PlaceholderCardComponent } from './components/cards/placeholder-card/placeholder-card.component';\nimport { SingleCardComponent } from './components/cards/single-card/single-card.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { DurationPipe } from './utils/duration.pipe';\nimport { MultipleCardComponent } from './components/cards/multiple-card/multiple-card.component';\n\n@NgModule({\n  declarations: [\n    GenericCardComponent,\n    SingleCardComponent,\n    PlaceholderCardComponent,\n    CarouselComponent,\n    DurationPipe,\n    MultipleCardComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    CarouselComponent\n  ]\n})\nexport class SimpleCarouselModule { }\n","export enum cardCardinality {\n    single = \"single\",\n    collection = \"collection\"\n}","export enum cardType {\n    elearning = 'elearning',\n    video = 'video',\n    learning_plan = 'learning_plan',\n    playlist = 'playlist',\n}\n","import { cardCardinality } from \"./card-cardinality\";\nimport { cardType } from \"./card-type\";\n\nexport class CardModel {\n    image: string;\n    type: cardType;\n    duration: number;\n    title: string;\n    subtitle: string;\n    cardinality: cardCardinality;\n}","/*\n * Public API Surface of simple-carousel\n */\n\nexport * from './lib/simple-carousel.module';\nexport * from './lib/components/carousel/carousel.component';\nexport * from './lib/models/card-cardinality'\nexport * from './lib/models/card-type'\nexport * from './lib/models/card-model'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GenericCardComponent as ɵa} from './lib/components/cards/generic-card/generic-card.component';\nexport {MultipleCardComponent as ɵe} from './lib/components/cards/multiple-card/multiple-card.component';\nexport {PlaceholderCardComponent as ɵc} from './lib/components/cards/placeholder-card/placeholder-card.component';\nexport {SingleCardComponent as ɵb} from './lib/components/cards/single-card/single-card.component';\nexport {DurationPipe as ɵd} from './lib/utils/duration.pipe';"],"names":[],"mappings":"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"}